"""
Django settings for payments project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""



from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sa)ik2hslcintl4(r)_-u@nsq1m%xw16@o_ye2i34&ze^(c2#f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "myschool-hy05.onrender.com",
    "localhost",
    "127.0.0.1"
]
# settings.py

CSRF_TRUSTED_ORIGINS = [
    "https://myschool-hy05.onrender.com",
    "https://www.myschool-hy05.onrender.com",  # just in case www is used
]





# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap5',
    'mathfilters',
    'crispy_forms',
    'crispy_bootstrap5',
    'widget_tweaks',
    'cloudinary',
    'rest_framework',
    'django_select2',
    'import_export',
    'django_extensions',
    'django.contrib.humanize',
    'django_filters',
    # Local apps
    # 'core',
    # 'accounts',
    # 'settings',
    # 'students',
    # 'exams',
    'school',
    # 'staff',












]


CRISPY_TEMPLATE_PACK = 'bootstrap5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # âœ… This line
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'payments.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # Project-level templates
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'school.context_processors.school_config',





            ],
        },
    },
]

WSGI_APPLICATION = 'payments.wsgi.application'

#nbnbnbnmnnn
import os
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


#cloudinary
import cloudinary
import cloudinary.uploader
import cloudinary.api
import dj_database_url

cloudinary.config(
    cloud_name = "oeri",
    api_key = "642847218957968",
    api_secret = "b9U5NV2KEka8UREAU36WcVHJUD0",
)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': os.getenv('DB_NAME', 'postgres'),
#             'USER': os.getenv('DB_USER', 'postgres.txmpxyolfwoqbcaouaqa'),
#             'PASSWORD': os.getenv('DB_PASSWORD', 'Egesusu0725#'),
#             'HOST': os.getenv('DB_HOST', 'aws-0-us-west-1.pooler.supabase.com'),
#             'PORT': os.getenv('DB_PORT', '6543'),
#             'CONN_MAX_AGE': 600,    # Keeps connections open for 10 minutes
#             'OPTIONS': {
#                 'sslmode': 'require',  # Ensures SSL connection for security
#             },
#         }
#     }


# DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': "postgres",
#             'USER': "postgres",
#             'PASSWORD': "tkZhcOycgH9Rta8o",
#             'HOST': "db.nqwgmmvjijntcbodhdvr.supabase.co",
#             'PORT': "5432",
#
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Africa/Nairobi'
USE_I18N = True
USE_L10N = True
USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication



# Login/Logout URLs


# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


LOGIN_URL = '/login/'  # this matches your `path('login/', views.user_login, name='login')`
LOGIN_REDIRECT_URL = '/'  # or whatever page you want after successful login
LOGOUT_REDIRECT_URL = '/login/'  # optional, where to go after logout


# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
        'your_app_name': {  # Replace with your app name
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# settings.py

# Email backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'joerironald@gmail.com'  # Replace with your actual email
EMAIL_HOST_PASSWORD = 'tfnm helr ktfx lnwt'  # Use an app password if 2-Step Verification is enabled
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# Django Tables 2
DJANGO_TABLES2_TEMPLATE = "django_tables2/bootstrap5.html"

# Security settings for production
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    X_FRAME_OPTIONS = 'DENY'


JAZZMIN_SETTINGS = {
    "theme": "minty",
    "site_title": "Landscaping Admin",
    "site_header": "Landscaping Admin",
    "site_brand": "Landscaping",
    "site_logo": "https://your-cdn.com/logo.png",
    "welcome_sign": "Welcome to Landscaping Admin",
    "copyright": "Landscaping Ltd.",
    "navigation_expanded": True,

    "order_with_respect_to": [
        "landscaping_app.SiteSetting",
        "landscaping_app.HeroImage",
        "landscaping_app.Service",
        "landscaping_app.Project",
        "landscaping_app.Testimonial",
        "landscaping_app.TeamMember",
        "landscaping_app.ContactMessage",

    ],

    "icons": {
        "landscaping_app.SiteSetting": "fas fa-cog",
        "landscaping_app.Service": "fas fa-leaf",
        "landscaping_app.Project": "fas fa-tools",
        "landscaping_app.Testimonial": "fas fa-comments",
        "landscaping_app.TeamMember": "fas fa-users",
        "landscaping_app.ContactMessage": "fas fa-envelope",
        "landscaping_app.HeroImage": "fas fa-image",
    },
}


