# Generated by Django 4.2.20 on 2025-04-04 15:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('Degree', 'Degree'), ('Masters', 'Masters'), ('PhD', 'PhD')], max_length=20)),
                ('duration', models.PositiveIntegerField(help_text='Duration in years')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Academic Level',
                'verbose_name_plural': 'Academic Levels',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Academic Year',
                'verbose_name_plural': 'Academic Years',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academicyear')),
            ],
            options={
                'verbose_name_plural': 'Classes',
                'ordering': ['academic_year', 'semester', 'course', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('duration', models.PositiveIntegerField(help_text='Duration in semesters')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academiclevel')),
            ],
            options={
                'ordering': ['academic_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_published', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academicyear')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('weight', models.PositiveIntegerField(help_text='Weight as percentage of total marks', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.course')),
            ],
            options={
                'ordering': ['academic_year', 'course', 'fee_type'],
            },
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('min_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('points', models.DecimalField(decimal_places=1, max_digits=3)),
                ('remark', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['grading_scale', '-points'],
            },
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Grading Scale',
                'verbose_name_plural': 'Grading Scales',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_number', models.CharField(max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='students/photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('qualification', models.CharField(max_length=100)),
                ('specialization', models.CharField(max_length=100)),
                ('date_joined', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='teachers/photos/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_reference', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('partial', 'Partial'), ('unpaid', 'Unpaid')], max_length=10)),
                ('remarks', models.TextField(blank=True)),
                ('fee_structure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.feestructure')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='csms.student')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csms.academicyear')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='SchoolSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school/logo/')),
                ('motto', models.CharField(blank=True, max_length=200)),
                ('address', models.TextField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('admission_number_prefix', models.CharField(default='STD', max_length=10)),
                ('current_academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='csms.academicyear')),
            ],
            options={
                'verbose_name': 'School Setting',
                'verbose_name_plural': 'School Settings',
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('weight', models.PositiveIntegerField(help_text='Weight as percentage (total for all papers in subject should be 100)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(blank=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='csms.subject')),
            ],
            options={
                'ordering': ['subject', 'code'],
                'unique_together': {('subject', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('general', 'General'), ('academic', 'Academic'), ('fee', 'Fee'), ('exam', 'Exam'), ('event', 'Event')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('comment', models.CharField(blank=True, max_length=100)),
                ('entered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entered_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.exam')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='csms.paper')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='csms.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.subject')),
            ],
            options={
                'ordering': ['exam', 'subject', 'student'],
                'unique_together': {('student', 'exam', 'subject', 'paper')},
            },
        ),
        migrations.CreateModel(
            name='GradeAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=1, max_digits=3)),
                ('remark', models.CharField(max_length=100)),
                ('allocated_at', models.DateTimeField(auto_now_add=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.grade')),
                ('mark', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='csms.mark')),
            ],
            options={
                'ordering': ['-allocated_at'],
            },
        ),
        migrations.AddField(
            model_name='grade',
            name='grading_scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='csms.gradingscale'),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='fee_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.feetype'),
        ),
        migrations.AddField(
            model_name='exam',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.examtype'),
        ),
        migrations.AddField(
            model_name='exam',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.semester'),
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects', to='csms.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
            ],
            options={
                'verbose_name': 'Class Subject',
                'verbose_name_plural': 'Class Subjects',
                'unique_together': {('class_obj', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='class',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.course'),
        ),
        migrations.AddField(
            model_name='class',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.semester'),
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(through='csms.ClassSubject', to='csms.subject'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classes', to='csms.teacher'),
        ),
        migrations.CreateModel(
            name='AcademicCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('holiday', 'Holiday'), ('exam', 'Examination'), ('event', 'School Event'), ('meeting', 'Meeting'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csms.academicyear')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='SubjectGrading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_papers', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True)),
                ('grading_scale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.gradingscale')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_schemes', to='csms.subject')),
            ],
            options={
                'verbose_name': 'Subject Grading',
                'verbose_name_plural': 'Subject Gradings',
                'unique_together': {('subject', 'number_of_papers')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='grade',
            unique_together={('grading_scale', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='feestructure',
            unique_together={('course', 'academic_year', 'fee_type')},
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('venue', models.CharField(max_length=100)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='csms.exam')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.subject')),
            ],
            options={
                'ordering': ['exam', 'date', 'start_time'],
                'unique_together': {('exam', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='csms.student')),
            ],
            options={
                'ordering': ['-enrollment_date'],
                'unique_together': {('student', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='CourseSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_core', models.BooleanField(default=True)),
                ('credits', models.PositiveIntegerField(default=3)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_subjects', to='csms.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csms.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csms.subject')),
            ],
            options={
                'verbose_name': 'Course Subject',
                'verbose_name_plural': 'Course Subjects',
                'ordering': ['course', 'semester', 'subject'],
                'unique_together': {('course', 'subject', 'semester')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('name', 'academic_year', 'semester')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=10)),
                ('remarks', models.CharField(blank=True, max_length=100)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='csms.student')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AcademicReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_points', models.DecimalField(decimal_places=2, max_digits=5)),
                ('position', models.PositiveIntegerField()),
                ('remarks', models.TextField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.exam')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.teacher')),
                ('overall_grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='csms.grade')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='csms.student')),
            ],
            options={
                'ordering': ['-exam', 'position'],
                'unique_together': {('student', 'exam')},
            },
        ),
    ]
