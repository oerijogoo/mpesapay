# Generated by Django 4.2.20 on 2025-04-04 15:32

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=2)),
                ('min_mark', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_mark', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'ordering': ['-min_mark'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.academicyear')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated')], default='active', max_length=20)),
                ('admission_number', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('picture', cloudinary.models.CloudinaryField(blank=True, max_length=255, verbose_name='image')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.semester')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('max_mark', models.DecimalField(decimal_places=2, max_digits=5)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='sms.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField(auto_now_add=True)),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.grade')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='sms.paper')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='sms.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='subjects',
            field=models.ManyToManyField(blank=True, help_text='Subjects included in this course', related_name='courses', to='sms.subject'),
        ),
        migrations.CreateModel(
            name='StudentSubjectGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade', models.CharField(max_length=2)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.academicyear')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'semester')},
            },
        ),
    ]
